<?php

/**
 * @file
 * An interface to the API for APPrise Mobile Clients.
 */

/**
 * Define constants.
 */

// Set the API version.
define('APPRISE_MOBILE_API_VERSION', '2.0.0');

// Set the path to the API.
define('APPRISE_MOBILE_API_PATH', drupal_get_path('module', 'apprise_mobile_api') . '/SwaggerClient-php');

/**
 * Implements hook_menu().
 */
function apprise_mobile_api_menu() {
  $items = array();

  $items['admin/config/content/apprise-mobile-api'] = array(
    'title' => 'APPrise Mobile API',
    'description' => 'Adjust APPrise Mobile API settings.',
    'file' => 'apprise_mobile_api.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('apprise_mobile_api_admin_settings'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Implements hook_cron().
 */
function apprise_mobile_api_cron() {
  $variables = apprise_mobile_api_get_variables();

  if (!$run = $variables['execute']) {
    $cron = $variables['cron'];
    switch ($cron) {
      case 1:
        $run = TRUE;
        break;

      case 2:
        // Only run cron between 12:00 and 1:00 AM.
        // This works only if cron runs hourly or
        // within this time frame (recommended).
        $run = !format_date(time(), 'custom', 'G');
        break;

      default:
        $run = FALSE;
    }
  }

  if ($run) {
    try {
      // Retrieve all bundles.
      $bundles = array();
      foreach ($variables['types'] as $type => $value) {
        if ($value) {
          $bundles[] = $type;
        }
      }

      // Post all relevent content that was added since yesterday.
      $yesterday = strtotime('-1 day');
      foreach ($bundles as $bundle) {
        $rows = db_query("SELECT nid FROM {node} WHERE type = :bundle AND created >= :yesterday", array(
          ':bundle' => $bundle,
          ':yesterday' => $yesterday,
        ));
        foreach ($rows as $row) {
          $node = node_load($row->nid);
          if (isset($node->field_apprise_mobile_api_post[LANGUAGE_NONE][0]['value']) and $post = $node->field_apprise_mobile_api_post[LANGUAGE_NONE][0]['value']) {
            $content = check_markup($node->body[LANGUAGE_NONE][0]['value'], $node->body[LANGUAGE_NONE][0]['format']);
            // Base64 encode images.
            preg_match_all('|<img.*src="(.*)".*>|U', $content, $matches);
            if (isset($matches[1])) {
              foreach ($matches[1] as $path) {
                $type = pathinfo($path, PATHINFO_EXTENSION);
                $data = file_get_contents($path);
                $base64 = 'data:image/' . $type . ';base64,' . base64_encode($data);
                $content = str_replace($path, $base64, $content);
              }
              $file = variable_get('file_temporary_path', '/tmp') . '/' . time() . '.html';
              if ($fp = fopen($file, 'w')) {
                fwrite($fp, $content);
                fclose($fp);
              }
            }
            $publish_date = format_date($node->created, 'custom', 'Y-m-d');
            $web_url = NULL;
            $share = 0;
            $post_date = NULL;
            $unpost_date = NULL;
            $notes_enabled = 0;
            $notify = 1;
            $secure = 0;
            $include_in_feed = 1;
            $display_thumbnail = 1;
            $content_folder = $node->field_apprise_mobile_api_folder[LANGUAGE_NONE][0]['value'];
            $access_groups = $node->field_apprise_mobile_api_group[LANGUAGE_NONE][0]['value'];
            $integration_id = NULL;
            $integration_type = NULL;
            $values = array(
              'title' => $node->title,
              'file' => $file,
              'publishDate' => $publish_date,
              'webUrl' => $web_url,
              'share' => $share,
              'postDate' => $post_date,
              'unpostDate' => $unpost_date,
              'notesEnabled' => $notes_enabled,
              'notify' => $notify,
              'secure' => $secure,
              'includeInFeed' => $include_in_feed,
              'displayThumbnail' => $display_thumbnail,
              'contentFolder' => $content_folder,
              'accessGroups' => $access_groups,
              'integrationId' => $integration_id,
              'integrationType' => $integration_type,
            );
            $response = apprise_mobile_api_post('content', $values);
            $message = t(':title of type :bundle posted: :response', array(
              ':title' => $node->title,
              ':bundle' => $bundle,
              ':response' => $response,
            ));
            if (variable_get('error_level', 0)) {
              drupal_set_message($message);
            }
            watchdog('apprise_mobile_api', $message);
            // Remove temporary file.
            unlink($file);
          }
        }
      }
    } catch (Exception $e) {
      $msg = 'Exception when calling apprise_mobile_api_post: ' . $e->getMessage();
      if (variable_get('error_level', 0)) {
        drupal_set_message($msg, 'error');
      }
      watchdog('apprise_mobile_api', $msg, array(), WATCHDOG_ERROR);
    }
  }
}

/**
 * Get content via an API request.
 */
function apprise_mobile_api_get($call = 'content') {
  $content = array();

  try {
    // Build the request URL.
    $variables = apprise_mobile_api_get_variables();
    $base_url = $variables['base_url'];
    $params = array(
      'limit' => $variables['limit'],
      'offset' => $variables['offset'],
      'code' => $variables['key'],
    );
    $url = $base_url . '/' . $call . '?' . http_build_query($params);

    // Return results.
    if ($results = json_decode(file_get_contents($url))) {
      // Build array from results.
      foreach ($results as $result) {
        $content[$result->_id] = isset($result->title) ? $result->title : $result->name;
      }
    }
  } catch (Exception $e) {
    $msg = 'Exception when processing the request: ' . $e->getMessage();
    if (variable_get('error_level', 0)) {
      drupal_set_message($msg, 'error');
    }
    watchdog('apprise_mobile_api', $msg, array(), WATCHDOG_ERROR);
  }

  return $content;
}

/**
 * Post content via an API request.
 */
function apprise_mobile_api_post($call = 'content', $values = array()) {
  $msg = '';
  try {
    // Build the request URL.
    $variables = apprise_mobile_api_get_variables();
    $base_url = $variables['base_url'];
    $code = $variables['key'];
    $url = $base_url . '/' . $call . '?code=' . $code;
    $headers = array('Content-Type:multipart/form-data');
    $fields = http_build_query($values);

    // Post results.
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $values);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
    $response = curl_exec($ch);
    curl_close($ch);
    $msg = 'Request: ' . $url . '&' . $fields . '<br />Response: ' . print_r($response, TRUE);
    if ($response == 'OK') {
      if (variable_get('error_level', 0)) {
        drupal_set_message($msg);
      }
      watchdog('apprise_mobile_api', $msg);
    }
    else {
      if (variable_get('error_level', 0)) {
        drupal_set_message($msg, 'error');
      }
      watchdog('apprise_mobile_api', $msg, array(), WATCHDOG_ERROR);
    }
  } catch (Exception $e) {
    $msg = 'Exception when processing the request: ' . $e->getMessage();
    if (variable_get('error_level', 0)) {
      drupal_set_message($msg, 'error');
    }
    watchdog('apprise_mobile_api', $msg, array(), WATCHDOG_ERROR);
  }
  return $msg;
}

/**
 * Get variables.
 */
function apprise_mobile_api_get_variables() {
  $host = variable_get('apprise_mobile_api_host', 'https://api.theemployeeapp.com');
  $parsed_url = parse_url($host);
  if (!empty($parsed_url['host']) and !defined('APPRISE_MOBILE_API_HOST')) {
    define('APPRISE_MOBILE_API_HOST', $host);
  }
  $base_url = $host . '/v' . (int)APPRISE_MOBILE_API_VERSION;
  if ($mode = variable_get('apprise_mobile_api_mode', 0)) {
    $key = variable_get('apprise_mobile_api_prod_key', '');
    $prefix = variable_get('apprise_mobile_api_prod_prefix', '');
  }
  else {
    $key = variable_get('apprise_mobile_api_test_key', '');
    $prefix = variable_get('apprise_mobile_api_test_prefix', '');
  }
  $types = variable_get('apprise_mobile_api_types', array());
  $limit = variable_get('apprise_mobile_api_limit', 10);
  $offset = variable_get('apprise_mobile_api_offset', 0);
  $cron = variable_get('apprise_mobile_api_cron', 0);
  $execute = variable_get('apprise_mobile_api_execute', 0);
  return array(
    'host' => $host,
    'base_url' => $base_url,
    'mode' => $mode,
    'key' => $key,
    'prefix' => $prefix,
    'types' => $types,
    'limit' => $limit,
    'offset' => $offset,
    'cron' => $cron,
    'execute' => $execute,
  );
}
